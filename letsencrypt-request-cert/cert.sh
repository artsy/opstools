#!/usr/bin/env bash

set -e

DOMAIN='<the domain you want to get certs for>'
S3_BUCKET='<name of S3 bucket to save the certs in>'

echo "Creating certbot dirs under your home dir..."
CERTBOT_DIR=~/certbot
CERTBOT_ETC_DIR=~/certbot/etc
CERTBOT_VAR_DIR=~/certbot/lib
CERTBOT_CERT_DIR="~/certbot/etc/live/$DOMAIN"
mkdir -p "$CERTBOT_ETC_DIR"
mkdir -p "$CERTBOT_VAR_DIR"

cat << EOF
Running certbot, follow interactive prompts. See README for how to answer prompts.

Provide to certbot these domains: *.$DOMAIN,*.prd.$DOMAIN,*.stg.$DOMAIN
To prove that you own those domains, certbot will ask you to create the following TXT records:

_acme-challenge.$DOMAIN
_acme-challenge.prd.$DOMAIN
_acme-challenge.stg.$DOMAIN

Go to Route53, create them all under '$DOMAIN' hosted zone. (not under prd/stg.$DOMAIN zones)

After you create each record, verify it exists using dig/nslookup. (make sure you are not on VPN otherwise you won't see the record)

Certbot will generate cert/key and save them in $CERTBOT_CERT_DIR

EOF

docker run -it --rm --name certbot \
  -v "$CERTBOT_ETC_DIR:/etc/letsencrypt"  \
  -v "$CERTBOT_VAR_DIR:/var/lib/letsencrypt" \
  certbot/certbot certonly --manual --force-renewal --preferred-challenges=dns

read -p "The TXT records that you created are no longer required. Please delete them. Hit enter when done."

echo "Files generated by Certbot are owned by root. Changing ownership to you (via sudo)..."
USER=$(id -u)
GROUP=$(id -g)
sudo chown -R "$USER":"$GROUP" "$CERTBOT_ETC_DIR"
sudo chown -R "$USER":"$GROUP" "$CERTBOT_VAR_DIR"

echo "Tar up Certbot files..."
DAY=$(date +%Y%m%d)
TAR_FILE="$CERTBOT_DIR/certbot.$DAY.tar.gz"
tar -czvvf "$TAR_FILE" "$CERTBOT_DIR"

S3_LOCATION="s3://$S3_BUCKET/certificates/$DOMAIN/"
echo "Ship the tar up to $S3_LOCATION which currently has:"
aws s3 ls "$S3_LOCATION" || echo "Something wrong with executing AWS CLI."
aws s3 cp "$TAR_FILE" "$S3_LOCATION"

echo "Loading new cert/key into staging k8s for use by ingress controllers..."
kubectl --context staging delete secret "$DOMAIN-tls"
kubectl --context staging create secret tls "$DOMAIN-tls" \
  --cert="$CERTBOT_CERT_DIR/fullchain.pem" \
  --key="$CERTBOT_CERT_DIR/privkey.pem"

echo "Go visit https://kubernetes.stg.$DOMAIN and check out the cert."
read -p "Hit enter if the cert is good."
read -p "You said cert is good. I am ready to repeat for prod k8s. Hit enter to proceed."

echo "Loading new cert/key into production k8s for use by ingress controllers..."
kubectl --context production delete secret "$DOMAIN-tls"
kubectl --context production create secret tls "$DOMAIN-tls" \
  --cert="$CERTBOT_CERT_DIR/fullchain.pem" \
  --key="$CERTBOT_CERT_DIR/privkey.pem"

echo "Go visit https://kubernetes.prd.$DOMAIN and check out the cert."

echo "Deleting certbot files from your home dir..."
rm -rf ~/certbot
