---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: opstools
  namespace: default

---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: opstools
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - persistentvolumeclaims
  - replicationcontrollers
  - secrets
  - serviceaccounts
  - services
  verbs:
  - get
  - list
- apiGroups:
  - apps
  resources:
  - daemonsets
  - deployments
  - statefulsets
  verbs:
  - get
  - list
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - get
  - list
- apiGroups:
  - batch
  resources:
  - cronjobs
  verbs:
  - get
  - list
- apiGroups:
  - extensions
  resources:
  - daemonsets
  - deployments
  - ingresses
  verbs:
  - get
  - list
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - get
  - list
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs:
  - get
  - list
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list

---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: opstools
  namespace: default
subjects:
- kind: User
  name: system:serviceaccount:default:opstools
roleRef:
  kind: Role
  name: opstools
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: opstools-terraform-drift-detection
spec:
  schedule: "15 7 * * *"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        metadata:
          annotations:
            "cluster-autoscaler.kubernetes.io/safe-to-evict": "false"
        spec:
          containers:
            - name: opstools-terraform-drift-detection
              image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/opstools:staging
              command: ["src/terraform_drift_detection/detect.py"]
              imagePullPolicy: Always
              envFrom:
                - configMapRef:
                    name: opstools-environment
          restartPolicy: Never
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: tier
                    operator: In
                    values:
                    - background

---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: opstools-k8s-create-backup
spec:
  schedule: "20 8 * * *"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        metadata:
          annotations:
            "cluster-autoscaler.kubernetes.io/safe-to-evict": "false"
        spec:
          containers:
            - name: opstools-k8s-create-backup
              image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/opstools:staging
              command: ["src/kubernetes_backup/backup.py", "--s3"]
              imagePullPolicy: Always
              envFrom:
                - configMapRef:
                    name: opstools-environment
          serviceAccountName: opstools
          restartPolicy: Never
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: tier
                    operator: In
                    values:
                    - background

---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: opstools-k8s-prune-backup
spec:
  schedule: "20 9 * * *"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        metadata:
          annotations:
            "cluster-autoscaler.kubernetes.io/safe-to-evict": "false"
        spec:
          containers:
            - name: opstools-k8s-prune-backup
              image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/opstools:staging
              command: ["src/kubernetes_backup/prune.py", "--force"]
              imagePullPolicy: Always
              envFrom:
                - configMapRef:
                    name: opstools-environment
          restartPolicy: Never
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: tier
                    operator: In
                    values:
                    - background

---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: opstools-cleanup-review-apps
spec:
  schedule: "42 9 * * 1"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 1
      template:
        metadata:
          annotations:
            "cluster-autoscaler.kubernetes.io/safe-to-evict": "false"
        spec:
          containers:
            - name: opstools-cleanup-review-apps
              image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/opstools:staging
              command: ["src/kubernetes_cleanup_namespaces/cleanup.py", "--force", "30"]
              imagePullPolicy: Always
              envFrom:
                - configMapRef:
                    name: opstools-environment
          restartPolicy: Never
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: tier
                    operator: In
                    values:
                    - background
