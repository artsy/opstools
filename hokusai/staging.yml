---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: opstools-terraform-drift-detection
spec:
  schedule: "15 7 * * *"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        metadata:
          annotations:
            "cluster-autoscaler.kubernetes.io/safe-to-evict": "false"
        spec:
          containers:
            - name: opstools-terraform-drift-detection
              image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/opstools:staging
              command:
              - python
              - src/terraform_drift_detection/detect.py
              imagePullPolicy: Always
              envFrom:
                - configMapRef:
                    name: opstools-environment
          restartPolicy: Never
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: tier
                    operator: In
                    values:
                    - background

---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: opstools-k8s-export
spec:
  schedule: "20 8 * * *"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        metadata:
          annotations:
            "cluster-autoscaler.kubernetes.io/safe-to-evict": "false"
        spec:
          containers:
            - name: opstools-k8s-export
              image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/opstools:staging
              command:
              - python
              - src/kubernetes_export/export.py
              - staging
              - --in_cluster
              - --s3
              imagePullPolicy: Always
              envFrom:
                - configMapRef:
                    name: opstools-environment
          serviceAccountName: opstools
          restartPolicy: Never
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: tier
                    operator: In
                    values:
                    - background

---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: opstools-s3-prune-backups-k8s
spec:
  schedule: "20 9 * * *"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        metadata:
          annotations:
            "cluster-autoscaler.kubernetes.io/safe-to-evict": "false"
        spec:
          containers:
            - name: opstools-s3-prune-backups-k8s
              image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/opstools:staging
              command:
              - python
              - src/s3_prune_backups/prune.py
              - k8s
              - staging
              - "10"
              - tar.gz
              - --force
              imagePullPolicy: Always
              envFrom:
                - configMapRef:
                    name: opstools-environment
          restartPolicy: Never
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: tier
                    operator: In
                    values:
                    - background

---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: opstools-cleanup-review-apps
spec:
  schedule: "42 9 * * 1"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 1
      template:
        metadata:
          annotations:
            "cluster-autoscaler.kubernetes.io/safe-to-evict": "false"
        spec:
          containers:
            - name: opstools-cleanup-review-apps
              image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/opstools:staging
              command:
              - python
              - src/kubernetes_cleanup_review_apps/cleanup.py
              - "30"
              - --force
              - --in_cluster
              imagePullPolicy: Always
              envFrom:
                - configMapRef:
                    name: opstools-environment
          serviceAccountName: opstools
          restartPolicy: Never
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: tier
                    operator: In
                    values:
                    - background

---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: opstools-k8s-configmap-jwt-scan
spec:
  schedule: "38 1 * * 1"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        metadata:
          annotations:
            "cluster-autoscaler.kubernetes.io/safe-to-evict": "false"
        spec:
          containers:
            - name: opstools-k8s-configmap-jwt-scan
              image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/opstools:staging
              command:
              - python
              - src/kubernetes_configmap_jwt_scan/scan.py
              - staging
              - --in_cluster
              imagePullPolicy: Always
              envFrom:
                - configMapRef:
                    name: opstools-environment
          serviceAccountName: opstools
          restartPolicy: Never
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: tier
                    operator: In
                    values:
                    - background

---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: opstools-cleanup-hokusai-run-pods
spec:
  schedule: "30 * * * *"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        metadata:
          annotations:
            "cluster-autoscaler.kubernetes.io/safe-to-evict": "false"
        spec:
          containers:
            - name: opstools-cleanup-hokusai-run-pods
              image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/opstools:staging
              command:
              - python
              - src/kubernetes_cleanup_pods/cleanup.py
              - staging
              - "6"
              - --force
              - --in_cluster
              - --name=-hokusai-run
              imagePullPolicy: Always
              envFrom:
                - configMapRef:
                    name: opstools-environment
          serviceAccountName: opstools
          restartPolicy: Never
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: tier
                    operator: In
                    values:
                    - background

---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: opstools-cleanup-jobs
spec:
  schedule: "31 * * * *"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        metadata:
          annotations:
            "cluster-autoscaler.kubernetes.io/safe-to-evict": "false"
        spec:
          containers:
            - name: opstools-cleanup-jobs
              image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/opstools:staging
              command:
              - python
              - src/kubernetes_cleanup_jobs/cleanup.py
              - staging
              - "48"
              - --force
              - --in_cluster
              imagePullPolicy: Always
              envFrom:
                - configMapRef:
                    name: opstools-environment
          serviceAccountName: opstools
          restartPolicy: Never
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: tier
                    operator: In
                    values:
                    - background

---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: opstools-cleanup-completed-pods
spec:
  schedule: "32 * * * *"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        metadata:
          annotations:
            "cluster-autoscaler.kubernetes.io/safe-to-evict": "false"
        spec:
          containers:
            - name: opstools-cleanup-completed-pods
              image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/opstools:staging
              command:
              - python
              - src/kubernetes_cleanup_pods/cleanup.py
              - staging
              - "48"
              - --completed
              - --force
              - --in_cluster
              imagePullPolicy: Always
              envFrom:
                - configMapRef:
                    name: opstools-environment
          serviceAccountName: opstools
          restartPolicy: Never
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: tier
                    operator: In
                    values:
                    - background

---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: opstools-rabbitmq-export
spec:
  schedule: "32 8 * * *"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        metadata:
          annotations:
            "cluster-autoscaler.kubernetes.io/safe-to-evict": "false"
        spec:
          containers:
            - name: opstools-rabbitmq-export
              image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/opstools:staging
              command:
              - python
              - src/rabbitmq_export/export.py
              - staging
              - --s3
              imagePullPolicy: Always
              envFrom:
                - configMapRef:
                    name: opstools-environment
          restartPolicy: Never
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: tier
                    operator: In
                    values:
                    - background

---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: opstools-s3-prune-backups-rabbitmq
spec:
  schedule: "32 9 * * *"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        metadata:
          annotations:
            "cluster-autoscaler.kubernetes.io/safe-to-evict": "false"
        spec:
          containers:
            - name: opstools-s3-prune-backups-rabbitmq
              image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/opstools:staging
              command:
              - python
              - src/s3_prune_backups/prune.py
              - rabbitmq
              - staging
              - "10"
              - json
              - --force
              imagePullPolicy: Always
              envFrom:
                - configMapRef:
                    name: opstools-environment
          restartPolicy: Never
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: tier
                    operator: In
                    values:
                    - background

---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: opstools-vault-snapshot
spec:
  schedule: "32 7 * * *"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        metadata:
          annotations:
            "cluster-autoscaler.kubernetes.io/safe-to-evict": "false"
        spec:
          containers:
            - name: opstools-vault-snapshot
              image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/opstools:staging
              command:
              - python
              - src/vault_snapshot/snap.py
              - staging
              - --s3
              imagePullPolicy: Always
              envFrom:
                - configMapRef:
                    name: opstools-environment
          restartPolicy: Never
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: tier
                    operator: In
                    values:
                    - background
