---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: opstools-terraform-drift-detection
spec:
  schedule: "05 7 * * *"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        metadata:
          annotations:
            "cluster-autoscaler.kubernetes.io/safe-to-evict": "false"
        spec:
          initContainers:
          - name: setenv
            image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/fortress:production
            imagePullPolicy: Always
            command:
            - python
            - src/load/load.py
            - kubernetes
            - production
            - opstools
            envFrom:
            - configMapRef:
                name: secrets-config
            volumeMounts:
            - name: secrets
              mountPath: /secrets
          containers:
          - name: opstools-terraform-drift-detection
            image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/opstools:production
            args:
            - python
            - src/terraform_drift_detection/detect.py
            imagePullPolicy: Always
            envFrom:
            - configMapRef:
                name: secrets-config
            - configMapRef:
                name: opstools-environment
            volumeMounts:
            - name: secrets
              mountPath: /secrets
              readOnly: true
          restartPolicy: Never
          serviceAccountName: opstools
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: tier
                    operator: In
                    values:
                    - background
          volumes:
          - name: secrets
            emptyDir: {}

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: opstools-k8s-export
spec:
  schedule: "40 8 * * *"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        metadata:
          annotations:
            "cluster-autoscaler.kubernetes.io/safe-to-evict": "false"
        spec:
          initContainers:
          - name: setenv
            image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/fortress:production
            imagePullPolicy: Always
            command:
            - python
            - src/load/load.py
            - kubernetes
            - production
            - opstools
            envFrom:
            - configMapRef:
                name: secrets-config
            volumeMounts:
            - name: secrets
              mountPath: /secrets
          containers:
          - name: opstools-k8s-export
            image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/opstools:production
            args:
            - python
            - src/kubernetes_export/export.py
            - production
            - --in_cluster
            - --s3
            imagePullPolicy: Always
            envFrom:
            - configMapRef:
                name: secrets-config
            - configMapRef:
                name: opstools-environment
            volumeMounts:
            - name: secrets
              mountPath: /secrets
              readOnly: true
          serviceAccountName: opstools
          restartPolicy: Never
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: tier
                    operator: In
                    values:
                    - background
          volumes:
          - name: secrets
            emptyDir: {}

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: opstools-s3-prune-backups-k8s
spec:
  schedule: "40 9 * * *"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        metadata:
          annotations:
            "cluster-autoscaler.kubernetes.io/safe-to-evict": "false"
        spec:
          initContainers:
          - name: setenv
            image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/fortress:production
            imagePullPolicy: Always
            command:
            - python
            - src/load/load.py
            - kubernetes
            - production
            - opstools
            envFrom:
            - configMapRef:
                name: secrets-config
            volumeMounts:
            - name: secrets
              mountPath: /secrets
          containers:
          - name: opstools-s3-prune-backups-k8s
            image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/opstools:production
            args:
            - python
            - src/s3_prune_backups/prune.py
            - k8s
            - production
            - "30"
            - tar.gz
            - --force
            imagePullPolicy: Always
            envFrom:
            - configMapRef:
                name: secrets-config
            - configMapRef:
                name: opstools-environment
            volumeMounts:
            - name: secrets
              mountPath: /secrets
              readOnly: true
          restartPolicy: Never
          serviceAccountName: opstools
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: tier
                    operator: In
                    values:
                    - background
          volumes:
          - name: secrets
            emptyDir: {}

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: opstools-cleanup-hokusai-run-pods
spec:
  schedule: "30 * * * *"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        metadata:
          annotations:
            "cluster-autoscaler.kubernetes.io/safe-to-evict": "false"
        spec:
          initContainers:
          - name: setenv
            image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/fortress:production
            imagePullPolicy: Always
            command:
            - python
            - src/load/load.py
            - kubernetes
            - production
            - opstools
            envFrom:
            - configMapRef:
                name: secrets-config
            volumeMounts:
            - name: secrets
              mountPath: /secrets
          containers:
          - name: opstools-cleanup-hokusai-run-pods
            image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/opstools:production
            args:
            - python
            - src/kubernetes_cleanup_pods/cleanup.py
            - production
            - "6"
            - --force
            - --in_cluster
            - --name=-hokusai-run
            imagePullPolicy: Always
            envFrom:
            - configMapRef:
                name: secrets-config
            - configMapRef:
                name: opstools-environment
            volumeMounts:
            - name: secrets
              mountPath: /secrets
              readOnly: true
          serviceAccountName: opstools
          restartPolicy: Never
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: tier
                    operator: In
                    values:
                    - background
          volumes:
          - name: secrets
            emptyDir: {}

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: opstools-cleanup-jobs
spec:
  schedule: "31 * * * *"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        metadata:
          annotations:
            "cluster-autoscaler.kubernetes.io/safe-to-evict": "false"
        spec:
          initContainers:
          - name: setenv
            image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/fortress:production
            imagePullPolicy: Always
            command:
            - python
            - src/load/load.py
            - kubernetes
            - production
            - opstools
            envFrom:
            - configMapRef:
                name: secrets-config
            volumeMounts:
            - name: secrets
              mountPath: /secrets
          containers:
          - name: opstools-cleanup-jobs
            image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/opstools:production
            args:
            - python
            - src/kubernetes_cleanup_jobs/cleanup.py
            - production
            - "48"
            - --force
            - --in_cluster
            imagePullPolicy: Always
            envFrom:
            - configMapRef:
                name: secrets-config
            - configMapRef:
                name: opstools-environment
            volumeMounts:
            - name: secrets
              mountPath: /secrets
              readOnly: true
          serviceAccountName: opstools
          restartPolicy: Never
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: tier
                    operator: In
                    values:
                    - background
          volumes:
          - name: secrets
            emptyDir: {}

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: opstools-cleanup-completed-pods
spec:
  schedule: "32 * * * *"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        metadata:
          annotations:
            "cluster-autoscaler.kubernetes.io/safe-to-evict": "false"
        spec:
          initContainers:
          - name: setenv
            image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/fortress:production
            imagePullPolicy: Always
            command:
            - python
            - src/load/load.py
            - kubernetes
            - production
            - opstools
            envFrom:
            - configMapRef:
                name: secrets-config
            volumeMounts:
            - name: secrets
              mountPath: /secrets
          containers:
          - name: opstools-cleanup-completed-pods
            image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/opstools:production
            args:
            - python
            - src/kubernetes_cleanup_pods/cleanup.py
            - production
            - "48"
            - --completed
            - --force
            - --in_cluster
            imagePullPolicy: Always
            envFrom:
            - configMapRef:
                name: secrets-config
            - configMapRef:
                name: opstools-environment
            volumeMounts:
            - name: secrets
              mountPath: /secrets
              readOnly: true
          serviceAccountName: opstools
          restartPolicy: Never
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: tier
                    operator: In
                    values:
                    - background
          volumes:
          - name: secrets
            emptyDir: {}

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: opstools-ecr-check-repos-for-terraform
spec:
  schedule: "13 7 * * *"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        metadata:
          annotations:
            "cluster-autoscaler.kubernetes.io/safe-to-evict": "false"
        spec:
          initContainers:
          - name: setenv
            image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/fortress:production
            imagePullPolicy: Always
            command:
            - python
            - src/load/load.py
            - kubernetes
            - production
            - opstools
            envFrom:
            - configMapRef:
                name: secrets-config
            volumeMounts:
            - name: secrets
              mountPath: /secrets
          containers:
          - name: opstools-ecr-check-repos-for-terraform
            image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/opstools:production
            args:
            - python
            - src/ecr_check_repos_for_terraform/check.py
            imagePullPolicy: Always
            envFrom:
            - configMapRef:
                name: secrets-config
            - configMapRef:
                name: opstools-environment
            volumeMounts:
            - name: secrets
              mountPath: /secrets
              readOnly: true
          restartPolicy: Never
          serviceAccountName: opstools
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: tier
                    operator: In
                    values:
                    - background
          volumes:
          - name: secrets
            emptyDir: {}

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: opstools-rabbitmq-export
spec:
  schedule: "06 8 * * *"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        metadata:
          annotations:
            "cluster-autoscaler.kubernetes.io/safe-to-evict": "false"
        spec:
          initContainers:
          - name: setenv
            image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/fortress:production
            imagePullPolicy: Always
            command:
            - python
            - src/load/load.py
            - kubernetes
            - production
            - opstools
            envFrom:
            - configMapRef:
                name: secrets-config
            volumeMounts:
            - name: secrets
              mountPath: /secrets
          containers:
          - name: opstools-rabbitmq-export
            image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/opstools:production
            args:
            - python
            - src/rabbitmq_export/export.py
            - production
            - --s3
            imagePullPolicy: Always
            envFrom:
            - configMapRef:
                name: secrets-config
            - configMapRef:
                name: opstools-environment
            volumeMounts:
            - name: secrets
              mountPath: /secrets
              readOnly: true
          restartPolicy: Never
          serviceAccountName: opstools
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: tier
                    operator: In
                    values:
                    - background
          volumes:
          - name: secrets
            emptyDir: {}

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: opstools-s3-prune-backups-rabbitmq
spec:
  schedule: "06 9 * * *"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        metadata:
          annotations:
            "cluster-autoscaler.kubernetes.io/safe-to-evict": "false"
        spec:
          initContainers:
          - name: setenv
            image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/fortress:production
            imagePullPolicy: Always
            command:
            - python
            - src/load/load.py
            - kubernetes
            - production
            - opstools
            envFrom:
            - configMapRef:
                name: secrets-config
            volumeMounts:
            - name: secrets
              mountPath: /secrets
          containers:
          - name: opstools-s3-prune-backups-rabbitmq
            image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/opstools:production
            args:
            - python
            - src/s3_prune_backups/prune.py
            - rabbitmq
            - production
            - "30"
            - json
            - --force
            imagePullPolicy: Always
            envFrom:
            - configMapRef:
                name: secrets-config
            - configMapRef:
                name: opstools-environment
            volumeMounts:
            - name: secrets
              mountPath: /secrets
              readOnly: true
          restartPolicy: Never
          serviceAccountName: opstools
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: tier
                    operator: In
                    values:
                    - background
          volumes:
          - name: secrets
            emptyDir: {}

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: opstools-vault-jwt-scan
spec:
  schedule: "43 1 * * 1"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        metadata:
          annotations:
            "cluster-autoscaler.kubernetes.io/safe-to-evict": "false"
        spec:
          initContainers:
          - name: setenv
            image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/fortress:production
            imagePullPolicy: Always
            command:
            - python
            - src/load/load.py
            - kubernetes
            - production
            - opstools
            envFrom:
            - configMapRef:
                name: secrets-config
            volumeMounts:
            - name: secrets
              mountPath: /secrets
          containers:
          - name: opstools-vault-jwt-scan
            image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/opstools:production
            args:
            - python
            - src/list_vault_jwt_expiration/list.py
            - production
            - 30
            imagePullPolicy: Always
            envFrom:
            - configMapRef:
                name: secrets-config
            - configMapRef:
                name: opstools-environment
            volumeMounts:
            - name: secrets
              mountPath: /secrets
              readOnly: true
          serviceAccountName: opstools
          restartPolicy: Never
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: tier
                    operator: In
                    values:
                    - background
          volumes:
          - name: secrets
            emptyDir: {}

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: opstools-vault-snapshot
spec:
  schedule: "42 7 * * *"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        metadata:
          annotations:
            "cluster-autoscaler.kubernetes.io/safe-to-evict": "false"
        spec:
          initContainers:
          - name: setenv
            image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/fortress:production
            imagePullPolicy: Always
            command:
            - python
            - src/load/load.py
            - kubernetes
            - production
            - opstools
            envFrom:
            - configMapRef:
                name: secrets-config
            volumeMounts:
            - name: secrets
              mountPath: /secrets
          containers:
          - name: opstools-vault-snapshot
            image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/opstools:production
            args:
            - python
            - src/vault_snapshot/snap.py
            - production
            - --s3
            imagePullPolicy: Always
            envFrom:
            - configMapRef:
                name: secrets-config
            - configMapRef:
                name: opstools-environment
            volumeMounts:
            - name: secrets
              mountPath: /secrets
              readOnly: true
          restartPolicy: Never
          serviceAccountName: opstools
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: tier
                    operator: In
                    values:
                    - background
          volumes:
          - name: secrets
            emptyDir: {}
